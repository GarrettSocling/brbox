#!/bin/sh
CPU_TYPE_RP1="0xb76"
CPU_TYPE_RP2="0xc07"

#Board types supported by BrBox
BD_TYP_RASPI_A="RASPI_A"
BD_TYP_RASPI_APLUS="RASPI_APLUS"
BD_TYP_RASPI_B="RASPI_B"
BD_TYP_RASPI_BPLUS="RASPI_BPLUS"
BD_TYP_RASPI_B2="RASPI_B2"
BD_TYP_BAYTRAIL="BAYTRAIL"
BD_TYP_BAYTRAIL_I210="BAYTRAIL_I210"
BD_TYP_DEFAULT="Unknown"
###############################################################################
ReadRaspiType()
{
	RESULT=$(cat /proc/cpuinfo | grep "Revision" )
	if [ $? != "0" ]; then
		echo "$BD_TYP_DEFAULT"
		return 1
	fi
	RESULT=$(echo $RESULT | head -n1 | awk '{print $3}'  ) #head cmd is due to quadcore raspi
	if [ $? != "0" ]; then
		echo "$BD_TYP_DEFAULT"
		return 1
	fi

	#http://elinux.org/RPi_HardwareHistory
	[ "$RESULT" = "0007" ]  && { echo $BD_TYP_RASPI_A; return 0; }
	[ "$RESULT" = "0008" ]  && { echo $BD_TYP_RASPI_A; return 0; }
	[ "$RESULT" = "0009" ]  && { echo $BD_TYP_RASPI_A; return 0; }
	[ "$RESULT" = "0012" ]  && { echo $BD_TYP_RASPI_APLUS; return 0; }

	[ "$RESULT" = "0004" ]  && { echo $BD_TYP_RASPI_B; return 0; }
	[ "$RESULT" = "0005" ]  && { echo $BD_TYP_RASPI_B; return 0; }
	[ "$RESULT" = "0006" ]  && { echo $BD_TYP_RASPI_B; return 0; }
	[ "$RESULT" = "000d" ]  && { echo $BD_TYP_RASPI_B; return 0; }
	[ "$RESULT" = "000e" ]  && { echo $BD_TYP_RASPI_B; return 0; }
	[ "$RESULT" = "000f" ]  && { echo $BD_TYP_RASPI_B; return 0; }

	[ "$RESULT" = "0010" ]  && { echo $BD_TYP_RASPI_BPLUS; return 0; }

	echo "$BD_TYP_DEFAULT"
	return 1
}
###############################################################################
RESULT=$(cat /proc/cpuinfo | grep "CPU part" )
if [ $? = "0" ]; then
	RESULT=$(echo $RESULT | head -n1 | awk '{print $4}'  )
	if [ $? != "0" ]; then
		echo $BD_TYP_DEFAULT
		return 1
	fi
	[ "$RESULT" = "$CPU_TYPE_RP1" ]  && { RES=$(ReadRaspiType); return $RES; }
	[ "$RESULT" = "$CPU_TYPE_RP2" ]  && { echo $BD_TYP_RASPI_B2; return 0; } #TODO: raspi-A2??
fi

#TODO Baytrail
echo $BD_TYP_DEFAULT
return 1

